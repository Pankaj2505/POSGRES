

### Topic to Cover 
	1. Where – filter rows based on a specified condition.
	2. Limit – get a subset of rows generated by a query.
	3. Fetch– limit the number of rows returned by a query.
	4. In – select data that matches any value in a list of values.
	5. Between – select data that is a range of values.
	6. Like – filter data based on pattern matching.
	7. Is Null – check if a value is null or not.
	
	
#### Where 
		1. it appear after select, from 
		```
			SELECT select_list
			FROM table_name
			WHERE condition
			ORDER BY sort_expression
		```
		2. The condition must evaluate to
			- true,
			- false,
			- unknown. 
			
		3. It can be a boolean expression or a combination of boolean expressions using the AND and OR operators.
		
		4. query only return rows when condition is true
		
		5. order of query execution 
			- from , where, select , order by 
			- column alias of select can not be used in where , but opposite can be done.
		6. we use this on SELECT, UPDATE, DELETE statement
		
		7. operators
			-  conditional [= , >, <, >=, <=, <>, ]
			- logical  [and , or, not]
			- [in , between , like, isnull]
			
			```
				SELECT
					first_name,
					LENGTH(first_name) name_length
				FROM
					customer
				WHERE 
					first_name LIKE 'A%' AND
					LENGTH(first_name) BETWEEN 3 AND 5
				ORDER BY
					name_length;
			```
			
#### Limit
		1. Return all rows	
			- select * from table ;
			- select * from table limit = null;
		2. Return top 5 rows
			- select * from table limit 5;
		3. Return last 5 rows
			- select * from table order by id desc limit 5;
		4. Skip first 5 row and then fetch next 3 rows
			- select * from table limit 3 offset 5;
		> when you use the LIMIT clause, you should always use the ORDER BY clause to control the row order.
		
#### Fetch		
		- LIMIT clause is not a SQL-standard.
		- If you plan to make your application compatible with other database systems, you should use the FETCH clause 
		```
			OFFSET start { ROW | ROWS }
			FETCH { FIRST | NEXT } [ row_count ] { ROW | ROWS } ONLY
			
			
			SELECT
				film_id,
				title
			FROM
				film
			ORDER BY
				title 
			FETCH FIRST ROW ONLY;
		```
		
		1. row | rows , FIRST | NEXT are synonymn. can be used interchangebly.
		2. FETCH FIRST ROW ONLY; and FETCH FIRST 1 ROW ONLY; is equivalant.
		
		3. to fetch top 5 
			- FETCH FIRST 5 ROW ONLY; 
		4. to skip 5 and fetch next 3
			select * from table offset 5 fetch first 3 row only;
			
#### In
		1. The IN operator returns true if the value matches any value in the list
		2. value IN (SELECT column_name FROM table_name);
		
#### BETWEEN
			1. value BETWEEN low AND high;
			2. low and high are implicit  equivalant to "value >= low and value <= high";
		
#### LIKE
		1. u can use pattern here " first_name LIKE 'Jen%' ";
		2. Percent sign ( %) matches any sequence of zero or more characters.
		3. Underscore sign ( _)  matches any single character.
		
#### Null
	1. where null = null  returns null that is unknown.
	2. guess the output 
		```
			SELECT
				id,
				first_name,
				last_name,
				email,
				phone
			FROM
				contacts
			WHERE
				phone = NULL;
		```
		- it return 0 rows as phone = null will always return null , that is  false .
		- so we use is null operator.
	3. is null fucntion return true  for null = null case 
		```
			SELECT
				id,
				first_name,
				last_name,
				email,
				phone
			FROM
				contacts
			WHERE
				phone IS NULL;
		```
	4.  [value is not null] will return not null values.